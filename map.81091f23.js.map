{"version":3,"sources":["src/placesModule.js","src/refs.js","src/api/map.js"],"names":["result","city","lat","lng","getPlaces","arr","idx","res","map","i","refs","customSelect","document","querySelector","radios","citiesList","placesList","items","input","service","infowindow","placesArr","initMap","obj","module","google","maps","LatLng","InfoWindow","Map","getElementById","center","zoom","request","query","location","radius","fields","type","places","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","length","push","nearbyPlacesList","setCenter","geometry","addEventListener","e","filteredArr","filter","place","name","includes","target","value","li","createElement","p","Marker","title","position","textContent","classList","add","append","vicinity","prepend","window"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAe;EACbA,MAAM,EAAE;IACNC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,gBAAgB;IACrBC,GAAG,EAAE;EACP,CAAC;EACDC,SAAS,EAAE,mBAAUC,GAAG,EAAEC,GAAG,EAAE;IAC7B,IAAIC,GAAG,GAAG,CAAC,CAAC;IAEZF,GAAG,CAACG,GAAG,CAAC,gBAAqBC,CAAC,EAAK;MAAA,IAAxBR,IAAI,QAAJA,IAAI;QAAEC,GAAG,QAAHA,GAAG;QAAEC,GAAG,QAAHA,GAAG;MACvB,IAAIG,GAAG,KAAKG,CAAC,EAAE;QACbF,GAAG,CAAC,MAAM,CAAC,GAAGN,IAAI;QAClBM,GAAG,CAAC,KAAK,CAAC,GAAGL,GAAG;QAChBK,GAAG,CAAC,KAAK,CAAC,GAAGJ,GAAG;MAClB;IACF,CAAC,CAAC;IACF,IAAI,CAACH,MAAM,GAAGO,GAAG;EACnB;AACF,CAAC;AAAA;;;;;;;;AClBD,IAAMG,IAAI,GAAG;EACXC,YAAY,EAAEC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;EACtDC,MAAM,EAAEF,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EACzCE,UAAU,EAAEH,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;EACjDG,UAAU,EAAEJ,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;EACjDI,KAAK,EAAEL,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EACvCK,KAAK,EAAEN,QAAQ,CAACC,aAAa,CAAC,OAAO;AACvC,CAAC;AAAC,eAEaH,IAAI;AAAA;;;;;;;;ACTnB;AACA;AAA2B;AAAA;AAAA;AAAA;AAE3B,IAAIF,GAAG;AACP,IAAIW,OAAO;AACX,IAAIC,UAAU;AACd,IAAIC,SAAS,GAAG,EAAE;AAElB,SAASC,OAAO,GAAsB;EAAA,IAArBC,GAAG,uEAAGC,qBAAM,CAACxB,MAAM;EAClC,IAAMC,IAAI,GAAG,IAAIwB,MAAM,CAACC,IAAI,CAACC,MAAM,CAACJ,GAAG,CAACrB,GAAG,EAAEqB,GAAG,CAACpB,GAAG,CAAC;EAErDiB,UAAU,GAAG,IAAIK,MAAM,CAACC,IAAI,CAACE,UAAU,EAAE;EACzCpB,GAAG,GAAG,IAAIiB,MAAM,CAACC,IAAI,CAACG,GAAG,CAACjB,QAAQ,CAACkB,cAAc,CAAC,KAAK,CAAC,EAAE;IACxDC,MAAM,EAAE9B,IAAI;IACZ+B,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,IAAMC,OAAO,GAAG;IACdC,KAAK,EAAEX,GAAG,CAACtB,IAAI;IACfkC,QAAQ,EAAElC,IAAI;IACdmC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;IAC5BC,IAAI,EAAE,CAAC,gBAAgB,EAAE,OAAO;EAClC,CAAC;EAEDnB,OAAO,GAAG,IAAIM,MAAM,CAACC,IAAI,CAACa,MAAM,CAACC,aAAa,CAAChC,GAAG,CAAC;EAEnDW,OAAO,CAACsB,YAAY,CAACR,OAAO,EAAE,UAACS,OAAO,EAAEC,MAAM,EAAK;IACjD,IAAIA,MAAM,IAAIlB,MAAM,CAACC,IAAI,CAACa,MAAM,CAACK,mBAAmB,CAACC,EAAE,EAAE;MACvD,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,OAAO,CAACI,MAAM,EAAErC,CAAC,EAAE,EAAE;QACvC;;QAEAY,SAAS,CAAC0B,IAAI,CAACL,OAAO,CAACjC,CAAC,CAAC,CAAC;QAC1BuC,gBAAgB,CAAC3B,SAAS,EAAEb,GAAG,CAAC;MAClC;MACAA,GAAG,CAACyC,SAAS,CAACP,OAAO,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAACf,QAAQ,CAAC;IAC7C;EACF,CAAC,CAAC;AACJ;AAEAzB,aAAI,CAACQ,KAAK,CAACiC,gBAAgB,CAAC,OAAO,EAAE,UAACC,CAAC,EAAK;EAC1C,IAAIC,WAAW,GAAGhC,SAAS,CAACiC,MAAM,CAAC,UAACC,KAAK,EAAK;IAC5C,OAAOA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACL,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;EAC5C,CAAC,CAAC;EAEFX,gBAAgB,CAACK,WAAW,CAAC;AAC/B,CAAC,CAAC;AAEF,IAAML,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIT,MAAM,EAAE/B,GAAG,EAAK;EACxC,IAAMoD,EAAE,GAAGhD,QAAQ,CAACiD,aAAa,CAAC,IAAI,CAAC;EACvC,IAAMC,CAAC,GAAGlD,QAAQ,CAACiD,aAAa,CAAC,GAAG,CAAC;EACrC;EAAA,2CAEoBtB,MAAM;IAAA;EAAA;IAAA,6BAAE;MAAA,IAAjBgB,KAAK;MACd,IAAI9B,MAAM,CAACC,IAAI,CAACqC,MAAM,CAAC;QACrBvD,GAAG,EAAHA,GAAG;QACHwD,KAAK,EAAET,KAAK,CAACC,IAAI;QACjBS,QAAQ,EAAEV,KAAK,CAACL,QAAQ,CAACf;MAC3B,CAAC,CAAC;MAEFyB,EAAE,CAACM,WAAW,GAAGX,KAAK,CAACC,IAAI;MAC3BI,EAAE,CAACO,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACxB;;MAEAR,EAAE,CAACS,MAAM,CAACP,CAAC,CAAC;MACZ;;MAEAF,EAAE,CAACT,gBAAgB,CAAC,OAAO,EAAE,YAAM;QACjC3C,GAAG,CAACyC,SAAS,CAACM,KAAK,CAACL,QAAQ,CAACf,QAAQ,CAAC;MACxC,CAAC,CAAC;MAEF2B,CAAC,CAACI,WAAW,GAAGX,KAAK,CAACe,QAAQ;MAE9B5D,aAAI,CAACM,UAAU,CAACuD,OAAO,CAACX,EAAE,CAAC;IAC7B,CAAC;IArBD;MAAA;IAAA;EAqBC;IAAA;EAAA;IAAA;EAAA;AACH,CAAC;AAEDY,MAAM,CAAClD,OAAO,GAAGA,OAAO;AAAC,eAEVA,OAAO;AAAA","file":"map.81091f23.js","sourceRoot":"..","sourcesContent":["export default {\n  result: {\n    city: \"Kyiv\",\n    lat: 50.4516590763791,\n    lng: 30.52602826090653,\n  },\n  getPlaces: function (arr, idx) {\n    let res = {};\n\n    arr.map(({ city, lat, lng }, i) => {\n      if (idx === i) {\n        res[\"city\"] = city;\n        res[\"lat\"] = lat;\n        res[\"lng\"] = lng;\n      }\n    });\n    this.result = res;\n  },\n};\n","const refs = {\n  customSelect: document.querySelector(\".custom-select\"),\n  radios: document.querySelector(\".radios\"),\n  citiesList: document.querySelector(\".citiesList\"),\n  placesList: document.querySelector(\".placesList\"),\n  items: document.querySelector(\".items\"),\n  input: document.querySelector(\"input\"),\n};\n\nexport default refs;\n","import module from \"../placesModule\";\nimport refs from \"../refs\";\n\nlet map;\nlet service;\nlet infowindow;\nlet placesArr = [];\n\nfunction initMap(obj = module.result) {\n  const city = new google.maps.LatLng(obj.lat, obj.lng);\n\n  infowindow = new google.maps.InfoWindow();\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: city,\n    zoom: 15,\n  });\n\n  const request = {\n    query: obj.city,\n    location: city,\n    radius: \"2000\",\n    fields: [\"name\", \"geometry\"],\n    type: [\"subway_station\", \"store\"],\n  };\n\n  service = new google.maps.places.PlacesService(map);\n\n  service.nearbySearch(request, (results, status) => {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n      for (var i = 0; i < results.length; i++) {\n        // передаем данние в аргумент\n\n        placesArr.push(results[i]);\n        nearbyPlacesList(placesArr, map);\n      }\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n}\n\nrefs.input.addEventListener(\"input\", (e) => {\n  let filteredArr = placesArr.filter((place) => {\n    return place.name.includes(e.target.value);\n  });\n\n  nearbyPlacesList(filteredArr);\n});\n\nconst nearbyPlacesList = (places, map) => {\n  const li = document.createElement(\"li\");\n  const p = document.createElement(\"p\");\n  // const img = document.createElement(\"img\");\n\n  for (const place of places) {\n    new google.maps.Marker({\n      map,\n      title: place.name,\n      position: place.geometry.location,\n    });\n\n    li.textContent = place.name;\n    li.classList.add(\"item\");\n    // img.src = place.icon;\n\n    li.append(p);\n    // li.append(img);\n\n    li.addEventListener(\"click\", () => {\n      map.setCenter(place.geometry.location);\n    });\n\n    p.textContent = place.vicinity;\n\n    refs.placesList.prepend(li);\n  }\n};\n\nwindow.initMap = initMap;\n\nexport default initMap;\n"]}