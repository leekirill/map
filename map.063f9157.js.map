{"version":3,"sources":["src/placesModule.js","src/refs.js","src/api/map.js"],"names":["result","city","lat","lng","getPlaces","arr","idx","res","map","i","refs","customSelect","document","querySelector","radios","citiesList","placesList","items","search","service","infowindow","places","addEventListener","e","target","value","initMap","obj","module","google","maps","LatLng","InfoWindow","Map","getElementById","center","zoom","request","query","location","radius","fields","type","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","forEach","push","filteredArr","handleInput","filter","el","name","toLowerCase","includes","nearbyPlacesList","setCenter","geometry","innerHTML","place","li","createElement","p","Marker","title","position","textContent","classList","add","append","vicinity","prepend","window"],"mappings":"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","file":"map.063f9157.js","sourceRoot":"..","sourcesContent":["export default {\n  result: {\n    city: \"Kyiv\",\n    lat: 50.4516590763791,\n    lng: 30.52602826090653,\n  },\n  getPlaces: function (arr, idx) {\n    let res = {};\n\n    arr.map(({ city, lat, lng }, i) => {\n      if (idx === i) {\n        res[\"city\"] = city;\n        res[\"lat\"] = lat;\n        res[\"lng\"] = lng;\n      }\n    });\n    this.result = res;\n  },\n};\n","const refs = {\n  customSelect: document.querySelector(\".custom-select\"),\n  radios: document.querySelector(\".radios\"),\n  citiesList: document.querySelector(\".citiesList\"),\n  placesList: document.querySelector(\".placesList\"),\n  items: document.querySelector(\".items\"),\n  search: document.querySelector(\".search\"),\n};\n\nexport default refs;\n","import module from \"../placesModule\";\nimport refs from \"../refs\";\n\nlet map;\nlet service;\nlet infowindow;\nlet places = [];\n\nrefs.search.addEventListener(\"input\", (e) => {\n  e.target.value;\n});\n\n// Google API\n\nfunction initMap(obj = module.result) {\n  const city = new google.maps.LatLng(obj.lat, obj.lng);\n\n  infowindow = new google.maps.InfoWindow();\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: city,\n    zoom: 15,\n  });\n\n  const request = {\n    query: obj.city,\n    location: city,\n    radius: \"2000\",\n    fields: [\"name\", \"geometry\"],\n    type: [\"subway_station\", \"store\"],\n  };\n\n  service = new google.maps.places.PlacesService(map);\n\n  service.nearbySearch(request, (results, status) => {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n      results.forEach((res) => {\n        places.push(res);\n\n        let filteredArr;\n\n        // Поиск мест\n\n        refs.search.addEventListener(\"input\", handleInput);\n\n        function handleInput(e) {\n          filteredArr = places.filter((el) =>\n            el.name.toLowerCase().includes(e.target.value.toLowerCase())\n          );\n\n          nearbyPlacesList(filteredArr, map);\n        }\n\n        nearbyPlacesList(places, map);\n      });\n\n      //\n\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n}\n\n// Добавляем масив ближайших мест\n\nconst nearbyPlacesList = (places, map) => {\n  refs.placesList.innerHTML = \"\";\n\n  for (const place of places) {\n    const li = document.createElement(\"li\");\n    const p = document.createElement(\"p\");\n    // const img = document.createElement(\"img\");\n\n    new google.maps.Marker({\n      map,\n      title: place.name,\n      position: place.geometry.location,\n    });\n\n    li.textContent = place.name;\n    li.classList.add(\"item\");\n    // img.src = place.icon;\n\n    li.append(p);\n    // li.append(img);\n\n    li.addEventListener(\"click\", () => {\n      map.setCenter(place.geometry.location);\n    });\n\n    p.textContent = place.vicinity;\n\n    refs.placesList.prepend(li);\n  }\n};\n\nwindow.initMap = initMap;\n\nexport default initMap;\n"]}